@startuml
skinparam linetype polyline
left to right direction

package "state" {
  card "Domain" as state.Domain {
    card "Command and Query" as state.Domain.CQ {
      package "api.email" as state.Domain.CQ.api {
        interface "ApplicationContextManager" as state.Domain.CQ.api.ApplicationContextManager {
        }
        package "command" as state.Domain.CQ.api.command {
          interface "CreateApplicationContext" as state.Domain.CQ.api.command.CreateApplicationContext
          interface "CreateSessionID" as state.Domain.CQ.api.command.CreateSessionID
          interface "ResetSessionIDTimeout" as state.Domain.CQ.api.command.ResetSessionIDTimeout
          interface "SetContext" as state.Domain.CQ.api.command.SetContext
        }
        package "query" as state.Domain.CQ.api.query {
          interface "GetApplicationContext" as state.Domain.CQ.api.query.GetApplicationContext
          interface "VerifySessionID" as state.Domain.CQ.api.query.VerifySessionID
        }
      }
    }
  }

  package "Domain" as state.Domain {
    card "models" as state.Domain.models {
      class "AccessContext" as state.Domain.models.AccessContext {
        +status: SessionIDStatus
      }
      class "ApplicationContext" as state.Domain.models.ApplicationContext {
        +childContexts: Seq[Context]
        +get[T <: Context](Class[T]): T
      }
      card "values" as state.Domain.models.values {
        class "SessionID" as state.Domain.models.values.SessionID {
          +value: String
        }
        class "SessionIDStatus" as state.Domain.models.values.SessionIDStatus {
          +exists(): Boolean
          +expired(): Boolean
          +existsAndNotExpired(): Boolean
        }
        class "TimeoutSessionIDStatus" as state.Domain.models.values.TimeoutSessionIDStatus {
        }
      }
    }
  }
}

state.Domain.CQ.api.ApplicationContextManager -down-|> state.Domain.CQ.api.command.CreateApplicationContext
state.Domain.CQ.api.ApplicationContextManager -down-|> state.Domain.CQ.api.command.CreateSessionID
state.Domain.CQ.api.ApplicationContextManager -down-|> state.Domain.CQ.api.command.ResetSessionIDTimeout
state.Domain.CQ.api.ApplicationContextManager -down-|> state.Domain.CQ.api.command.SetContext
state.Domain.CQ.api.ApplicationContextManager -down-|> state.Domain.CQ.api.query.GetApplicationContext
state.Domain.CQ.api.ApplicationContextManager -down-|> state.Domain.CQ.api.query.VerifySessionID
@enduml