@startuml
skinparam backgroundColor white
skinparam linetype polyline
left to right direction

card "auth.Infra" as Infra {
  package "InMemory" as Infra.memory {
    together {
      class "InMemoryApplicationContextManager" as Infra.memory.InMemoryApplicationContextManager {
        +tokenRepo: SessionIDRepository
        +appContextRepo: ApplicationContextRepository
      }
      class "InMemoryApplicationContextRepository" as Infra.memory.InMemoryApplicationContextRepository {
        -data: Map[SessionID,ApplicationContext]
        +resetTimeout()
        +contextOf()
        +create()
        +putContext[T <: Context: ClassTag](context: T)
      }
      class "InMemorySessionIDRepository" as Infra.memory.InMemorySessionIDRepository {
        -data: MutMap[SessionID, SessionIDStatus]
        +create(): IO[SessionID]
        +verify(sessionID: SessionID): IO[SessionIDStatus]
      }
    }
    together {
      class "InMemoryEmailAuthorizer" as Infra.memory.InMemoryEmailAuthorizer {
        +emailRepo: MemberEmailRepository
      }

      class "InMemoryMemberEmailRepository" as Infra.memory.InMemoryMemberEmailRepository {
        -data: Map[AuthEmailAddress, EncryptedPassword]
        +exists(emailAddress: AuthEmailAddress,rawPassword: String): OptionT[IO, Boolean]
      }
    }
  }
}

package "auth.Service" as auth.Service {
  class "EmailAuth" as auth.Service.EmailAuth {
    +emailAuthorizer: EmailAuthorizer
    +contextManager: ApplicationContextManager
    +login(): LoginStatusData
  }
}

component "auth" as auth {

  card "UseCase" as auth.UseCase {
    interface "EmailAuthorizer" as auth.UseCase.EmailAuthorizer {
    }
  }

  card "Repository" as auth.Repository {
    interface "MemberEmailRepository" as auth.Repository.MemberEmailRepository {
    }
  }
}


component "state" as state {
  card "UseCase" as state.UseCase {
    interface "ApplicationContextManager" as state.UseCase.ApplicationContextManager
  }

  card "Repository" as state.Repository {
  }
}

component "vertx" {
  component "app-base"{
  }
}


"app-base" <|-- auth.Service.EmailAuth
auth.Service.EmailAuth --* Infra.memory.InMemoryEmailAuthorizer
auth.Service.EmailAuth --* Infra.memory.InMemoryApplicationContextManager

Infra.memory.InMemoryEmailAuthorizer --|> auth.UseCase.EmailAuthorizer
Infra.memory.InMemoryEmailAuthorizer --* Infra.memory.InMemoryMemberEmailRepository
Infra.memory.InMemoryMemberEmailRepository --|> auth.Repository.MemberEmailRepository

Infra.memory.InMemoryApplicationContextManager --* Infra.memory.InMemorySessionIDRepository
Infra.memory.InMemoryApplicationContextManager --* Infra.memory.InMemoryApplicationContextRepository

Infra.memory.InMemoryApplicationContextManager --|> state.UseCase.ApplicationContextManager

Infra.memory.InMemoryEmailAuthorizer -- Infra.memory.InMemoryApplicationContextManager
@endtuml
